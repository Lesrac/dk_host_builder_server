apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'findbugs'

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.6.+'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.+'
	compile group: 'org.glassfish.jersey.core', name:'jersey-server', version:'2.+'
	compile group: 'org.glassfish.jersey.containers', name:'jersey-container-servlet', version:'2.+'
	compile group: 'org.postgresql', name:'postgresql', version:'9.4.1208.jre7'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.+'
	compile group: 'org.checkerframework', name: 'checker', version: '2.1.+'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}

jar{
	baseName='darklands-host-builder'
	version='0.0.1'
}

war {
    archiveName = 'Darklands_Host_Builder.war'
}

task wrapper(type: Wrapper){
	gradleVersion = '2.14'
}

test {
  exclude 'ch/frick/darklands/testsuits/**'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
    
	afterEvaluate{
		classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'ch/frick/darklands/**/Test*')
        })
	}
}

findbugs {
    toolVersion = "3.0.1"
    ignoreFailures = true
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "high"
}